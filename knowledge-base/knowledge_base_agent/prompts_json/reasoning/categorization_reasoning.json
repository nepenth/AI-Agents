{
  "prompt_id": "categorization_reasoning",
  "prompt_name": "Content Categorization (Reasoning)",
  "description": "Categorizes technical content with step-by-step reasoning and suggests filename-compatible item names for knowledge base organization",
  "model_type": "reasoning",
  "category": "categorization",
  "task": "Analyze technical content with deep reasoning to provide structured categorization with main category, sub category, and item name",
  "topic": "Technical content organization and knowledge graph construction with reasoning",
  "format": {
    "output_type": "json",
    "response_structure": {
      "role": "user",
      "content": "categorization request with reasoning instructions"
    },
    "constraints": [
      "Response must be valid JSON only",
      "No generic top-level terms allowed",
      "Item names must use lowercase with underscores",
      "Include step-by-step thinking process",
      "Expert-level technical distinctions required"
    ]
  },
  "input_parameters": {
    "required": ["context_content", "formatted_existing_categories"],
    "optional": ["is_thread"],
    "parameters": {
      "context_content": {
        "type": "string",
        "description": "The content to be categorized (tweet text, thread content, etc.)"
      },
      "formatted_existing_categories": {
        "type": "string",
        "description": "Formatted list of existing categories to guide categorization"
      },
      "is_thread": {
        "type": "boolean",
        "description": "Whether the content is from a tweet thread",
        "default": false
      }
    }
  },
  "template": {
    "type": "reasoning",
    "system_message": "Enable deep thinking subroutine. Analyze problems step-by-step. Consider multiple angles and approaches before providing your final answer. Adopt the persona of a highly experienced principal software engineer and technical architect. Your goal is to create a deeply technical and intuitively organized knowledge graph.",
    "user_message": "**CATEGORIZATION TASK - NOT A PROBLEM TO SOLVE**\n\nYou are categorizing content for a technical knowledge base. Do NOT solve any problems or answer any questions in the content. Your ONLY job is to categorize the content type and create appropriate metadata.\n\nContent to categorize:\n---\n{{context_content}}\n---\n\nExisting categories for reference:\n{{formatted_existing_categories}}\n\n**IMPORTANT**: Even if the content contains mathematical problems, coding challenges, or technical questions, do NOT solve them. Just categorize what type of content it is.\n\nCategorization steps:\n1. Identify the subject domain (e.g., mathematics, programming, networking)\n2. Choose a specific technical category\n3. Pick a precise sub-category\n4. Create a descriptive filename\n\nExamples:\n- Mathematical content → \"mathematical_analysis\" / \"calculus_problems\" / \"series_convergence_exercises\"\n- Java code → \"concurrency_patterns\" / \"thread_synchronization_java\" / \"java_atomiclong_vs_synchronized\"\n- API content → \"api_design_patterns\" / \"rest_api_best_practices\" / \"http_status_code_usage_guide\"\n\n**CRITICAL: Respond with ONLY this JSON format (no explanations, no solutions, no other text):**\n```json\n{\n  \"main_category\": \"specific_technical_domain\",\n  \"sub_category\": \"precise_technical_area\", \n  \"item_name\": \"descriptive_filename_with_underscores\"\n}\n```"
  },
  "variants": [
    {
      "name": "thread_content",
      "condition": "is_thread == true",
      "template": {
        "type": "reasoning",
        "system_message": "Enable deep thinking subroutine. Analyze problems step-by-step. Consider multiple angles and approaches before providing your final answer. Adopt the persona of a highly experienced principal software engineer and technical architect. Your goal is to create a deeply technical and intuitively organized knowledge graph.",
        "user_message": "**CATEGORIZATION TASK - NOT A PROBLEM TO SOLVE**\n\nYou are categorizing content for a technical knowledge base. Do NOT solve any problems or answer any questions in the content. Your ONLY job is to categorize the content type and create appropriate metadata.\n\nContent to categorize (Tweet Thread Content):\n---\n{{context_content}}\n---\n\nExisting categories for reference:\n{{formatted_existing_categories}}\n\n**IMPORTANT**: Even if the content contains mathematical problems, coding challenges, or technical questions, do NOT solve them. Just categorize what type of content it is.\n\nCategorization steps:\n1. Identify the subject domain (e.g., mathematics, programming, networking)\n2. Choose a specific technical category\n3. Pick a precise sub-category\n4. Create a descriptive filename\n\nExamples:\n- Mathematical content → \"mathematical_analysis\" / \"calculus_problems\" / \"series_convergence_exercises\"\n- Java code → \"concurrency_patterns\" / \"thread_synchronization_java\" / \"java_atomiclong_vs_synchronized\"\n- API content → \"api_design_patterns\" / \"rest_api_best_practices\" / \"http_status_code_usage_guide\"\n\n**CRITICAL: Respond with ONLY this JSON format (no explanations, no solutions, no other text):**\n```json\n{\n  \"main_category\": \"specific_technical_domain\",\n  \"sub_category\": \"precise_technical_area\", \n  \"item_name\": \"descriptive_filename_with_underscores\"\n}\n```"
      }
    },
    {
      "name": "single_tweet",
      "condition": "is_thread == false",
      "template": {
        "type": "reasoning",
        "system_message": "Enable deep thinking subroutine. Analyze problems step-by-step. Consider multiple angles and approaches before providing your final answer. Adopt the persona of a highly experienced principal software engineer and technical architect. Your goal is to create a deeply technical and intuitively organized knowledge graph.",
        "user_message": "**CATEGORIZATION TASK - NOT A PROBLEM TO SOLVE**\n\nYou are categorizing content for a technical knowledge base. Do NOT solve any problems or answer any questions in the content. Your ONLY job is to categorize the content type and create appropriate metadata.\n\nContent to categorize (Tweet Content):\n---\n{{context_content}}\n---\n\nExisting categories for reference:\n{{formatted_existing_categories}}\n\n**IMPORTANT**: Even if the content contains mathematical problems, coding challenges, or technical questions, do NOT solve them. Just categorize what type of content it is.\n\nCategorization steps:\n1. Identify the subject domain (e.g., mathematics, programming, networking)\n2. Choose a specific technical category\n3. Pick a precise sub-category\n4. Create a descriptive filename\n\nExamples:\n- Mathematical content → \"mathematical_analysis\" / \"calculus_problems\" / \"series_convergence_exercises\"\n- Java code → \"concurrency_patterns\" / \"thread_synchronization_java\" / \"java_atomiclong_vs_synchronized\"\n- API content → \"api_design_patterns\" / \"rest_api_best_practices\" / \"http_status_code_usage_guide\"\n\n**CRITICAL: Respond with ONLY this JSON format (no explanations, no solutions, no other text):**\n```json\n{\n  \"main_category\": \"specific_technical_domain\",\n  \"sub_category\": \"precise_technical_area\", \n  \"item_name\": \"descriptive_filename_with_underscores\"\n}\n```"
      }
    }
  ],
  "examples": [
    {
      "name": "concurrency_reasoning_example",
      "input": {
        "context_content": "Java's AtomicLong vs synchronized blocks for thread-safe counters. Performance comparison and when to use each approach.",
        "formatted_existing_categories": "concurrency_patterns, database_internals, api_design_patterns",
        "is_thread": false
      },
      "expected_output": "{\"role\": \"user\", \"content\": \"As an expert technical content curator...\"}",
      "notes": "Example of reasoning-based categorization with step-by-step analysis"
    }
  ],
  "extract_fields": {
    "main_category": {
      "type": "string",
      "description": "Highly specific technical domain category",
      "required": true,
      "validation": {
        "pattern": "^[a-z_]+$",
        "min_length": 3,
        "max_length": 50
      }
    },
    "sub_category": {
      "type": "string",
      "description": "More precise technical area within the main category",
      "required": true,
      "validation": {
        "pattern": "^[a-z_]+$",
        "min_length": 3,
        "max_length": 50
      }
    },
    "item_name": {
      "type": "string",
      "description": "Filesystem-friendly descriptive title",
      "required": true,
      "validation": {
        "pattern": "^[a-z_]+$",
        "min_length": 10,
        "max_length": 100
      }
    }
  },
  "metadata": {
    "version": "1.0.0",
    "author": "Knowledge Base Agent System",
    "created_date": "2024-07-24",
    "last_modified": "2024-07-24",
    "tags": ["categorization", "reasoning", "knowledge-graph", "technical-content", "step-by-step"],
    "performance_notes": "Reasoning-based prompt with step-by-step analysis and conditional logic",
    "quality_score": 9.5
  },
  "validation": {
    "output_validation": {
      "message_structure": {
        "role": "user",
        "content": "string"
      }
    },
    "quality_checks": [
      "step_by_step_reasoning",
      "no_generic_terms",
      "specific_technical_domains",
      "filesystem_safe_names",
      "expert_level_analysis"
    ]
  }
}